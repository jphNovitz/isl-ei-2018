{% extends '_skeletons/_forms.html.twig' %}

{% set entity = 'ingredients' %}

{% block title %}Ajout d'un ingrédient{% endblock %}

    {% block form_details %}

        <div class="two fields">
            <div class="field">
                <label for="form_name">Code</label>
                {{ form_widget(form.code, {'attr': {}}) }}
            </div>
            {% if form.code.vars.errors|length %}
                <div class="field">
                    {{ form_errors(form.code) }}
                </div>
            {% endif %}
            <div class="field">
                <label for="form_name">Nom</label>
                {{ form_widget(form.name) }}
            </div>
            {% if form.name.vars.errors|length %}
                <div class="field">
                    {{ form_errors(form.name) }}
                </div>
            {% endif %}
        </div>

        <div class="field">
            <label for="form_comment">Commentaire</label>
            {{ form_widget(form.comment) }}
        </div>
        <div class="two fields">
            <div class="field">
                <label for="form_categories">categories</label>
                {{ form_widget(form.categories, {"attr": {
                    "class": "ui fluid dropdown"
                }}) }}
            </div>
            <div class="field">
                <label for="form_components">composants</label>
                {{ form_widget(form.components, {"attr": {
                    "class": "ui fluid dropdown"
                }}) }}
            </div>
        </div>
        <div class="three fields">
            <div class="field">
                <label for="form_components">Pain</label>
                {{ form_widget(form.bread) }}
            </div>
            <div class="field">
                <label for="form_components">Sauce</label>
                {{ form_widget(form.sauce) }}
            </div>
            <div class="field">
                <label for="form_components">Crudité</label>
                {{ form_widget(form.vegetable) }}
            </div>
        </div>


        <div id="images-list-items"
             class="vich-image ui grid"
             data-prototype="{{ form_widget(form.images.vars.prototype)|e }}">
            <div class="sixteen wide column">
                <button
                        v-if="index < 0"
                        @click.prevent="plus"
                        class="ui circular icon positive mini button">
                    <i class="ui plus icon"> </i>
                </button>
            </div>

            <div v-for="(line, key) in lines" class="four wide column">
                <span v-html="line"></span>
                <button @click.prevent="plus" v-if="key === index" class="ui circular icon positive mini button">
                    <i class="ui plus icon"> </i>
                </button>
                <button @click.prevent="minus(key)" class="ui circular icon negative mini button">
                    <i class="ui minus icon"> </i>
                </button>
            </div>
            {% for image in form.images %}
                <div id="element{{ loop.index0 }}">
                    {{ form_errors(image) }}
                    {{ form_widget(image) }}

                    <button @click.prevent="plus" class="ui circular icon positive mini button">
                        <i class="ui plus icon"> </i>
                    </button>
                    <button @click.prevent="updateMinus({{ loop.index0 }})"
                            class="ui circular icon negative mini button">
                        <i class="ui minus icon"> </i>
                    </button>
                </div>
            {% endfor %}
        </div>

    {% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.1"></script>
    <script>
        (function () {
            const im = new Vue({
                el: '#images-list-items',
                delimiters: ['${', '}'],
                data: function () {
                    return {
                        proto: '',
                        line: '',
                        lines: [],
                        index: -1
                    }
                },
                mounted() {
                    this.proto = this.$el.dataset.prototype
                    let model = document.getElementById('images-list-items')
                    let node = model.getElementsByTagName('div')
                },
                methods: {
                    plus: function () {
                        this.index++
                        this.line = this.proto.replace(/__name__/g, this.index)
                        this.lines.push(this.line)
                    },
                    minus: function (k) {
                        this.lines.splice(k, 1)
                        this.index--
                    },
                    updateMinus: function (k) {
                        let element = document.getElementById('element' + k)
                        let model = document.getElementById('items-fields-list')
                        model.removeChild(element)
                    }
                }
            })

        })()


    </script>
{% endblock %}

{% block sui_js %}
    <script>
        $('.ui.dropdown')
            .dropdown()
        ;
    </script>
{% endblock %}