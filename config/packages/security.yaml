security:
    # https://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, user_db, userTemp_db]
        user_db:
            entity: { class: App\Entity\User, property: username}
        userTemp_db:
            entity: { class: App\Entity\UserTemp, property: username}
        in_memory:
            memory:
                users:
                    admin:
                        password: $2y$12$NmJuFEP1fV.wKOTboVsvqufPRO5eD6Gxg2.qN8h55na.FiUyAoNFy
                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: chain_provider
            form_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        api:
            pattern: ^/api/s/
            #anonymous: true
            stateless: true
            provider: chain_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                use_referer: true
                success_handler: App\EventListener\AfterSuccessLoginListener
                failure_handler: App\EventListener\AfterFailureLoginListener
                provider: chain_provider
            logout:
                path:   /logout
                target: /
            provider: chain_provider
    encoders:
        Symfony\Component\Security\Core\User\UserInterface:
            algorithm: bcrypt
            cost: 12
    access_control:
            - { path: ^/admin, roles: ROLE_ADMIN }
            - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/cookbook/security/form_login_setup.html
